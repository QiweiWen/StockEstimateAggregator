#ifndef CIRBUF_IMPL
#define CIRBUF_IMPL

template <typename T>
void cirbuff<T>::put(const T& stuff){
    sem_wait (&_empty);
    sem_wait (&_lock);  
    _storage[_tail] = stuff;
    _tail = (_tail + 1) % _size;
    ++_num;
    sem_post (&_lock);
    sem_post (&_full); 
}

template <typename T>
T cirbuff<T>::get (cirbuff<T>::donefunc d, int* fin){
    sem_wait (&_full);
    sem_wait (&_lock);
    const T& ret = _storage [_head];
    _head = (_head + 1) % _size;
    --_num;
    if (d (ret)){
        *fin = 1;
    }else{
        *fin = 0;
    }
    sem_post (&_lock);
    sem_post (&_empty);
    return ret;
}

#endif
